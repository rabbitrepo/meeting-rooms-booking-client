'use client'
import type { Metadata } from "next";
// import localFont from "next/font/local";
import "./global.css"
import MySidebar from "@/components/MySidebar";
import "react-big-calendar/lib/css/react-big-calendar.css";
import { getSession } from "@/lib/AppWrite";
import { useEffect } from "react";
import { useRouter } from "next/navigation";

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };
import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  
  const router = useRouter();
  const queryClient = new QueryClient();

  useEffect(() => {
    async function fetchData() {
      try {
        const session = await getSession();
        console.log('session:', session);
      } catch (error) {
        router.replace(`/login`);
      }
    }
    fetchData();
  }, []);

  return (
    <html lang="en">
      <body
      // className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <QueryClientProvider client={queryClient}>
          <MySidebar>{children}</MySidebar>
        </QueryClientProvider>
      </body>
    </html >
  );
}
